# Generated by Django 4.2.2 on 2023-12-05 20:11

import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('events_and_management_team', '0001_initial'),
        ('port', '0025_roles_and_position_is_mentor'),
        ('central_events', '0002_superevents'),
    ]

    operations = [
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=150)),
                ('event_description', models.CharField(blank=True, max_length=1000, null=True)),
                ('event_date', models.DateField(blank=True, null=True)),
                ('registration_fee', models.BooleanField(default=False)),
                ('flagship_event', models.BooleanField(default=False)),
                ('publish_in_main_web', models.BooleanField(default=False)),
                ('event_organiser', models.ForeignKey(default=5, on_delete=django.db.models.deletion.CASCADE, to='port.chapters_society_and_affinity_groups')),
                ('super_event_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='central_events.superevents')),
            ],
            options={
                'verbose_name': 'Registered Event',
            },
        ),
        migrations.RenameModel(
            old_name='Event_Categories',
            new_name='Event_Category',
        ),
        migrations.CreateModel(
            name='IntraBranchCollaborations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collaboration_with', models.CharField(blank=True, max_length=300, null=True)),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_events.events')),
            ],
            options={
                'verbose_name': 'Intra Branch Collaborations',
            },
        ),
        migrations.CreateModel(
            name='InterBranchCollaborations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collaboration_with', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='port.chapters_society_and_affinity_groups')),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_events.events')),
            ],
            options={
                'verbose_name': 'Inter Branch Collaborations',
            },
        ),
        migrations.CreateModel(
            name='Event_Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_status', models.BooleanField(default=False)),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_events.events')),
                ('venue_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events_and_management_team.venue_list')),
            ],
            options={
                'verbose_name': 'Event Venue',
            },
        ),
        migrations.CreateModel(
            name='Event_Proposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_proposal', models.FileField(blank=True, default=None, null=True, storage=django.core.files.storage.FileSystemStorage(location='Event Proposals'), upload_to='')),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_events.events')),
            ],
            options={
                'verbose_name': 'Event Proposal',
            },
        ),
        migrations.CreateModel(
            name='Event_Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_status', models.BooleanField(default=False)),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_events.events')),
                ('permission_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events_and_management_team.permission_criteria')),
            ],
        ),
    ]
