# Generated by Django 4.2.2 on 2024-01-14 07:26

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chapters_Society_and_Affinity_Groups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=150)),
                ('primary', models.IntegerField(default=0)),
                ('short_form', models.CharField(blank=True, max_length=20, null=True)),
                ('primary_color_code', models.CharField(blank=True, max_length=20, null=True)),
                ('secondary_color_code', models.CharField(blank=True, max_length=20, null=True)),
                ('mission_vision_color_code', models.CharField(blank=True, max_length=20, null=True)),
                ('text_color_code', models.CharField(blank=True, max_length=20, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='sc_ag_logos/')),
                ('short_form_2', models.CharField(blank=True, max_length=10, null=True)),
                ('page_title', models.TextField(blank=True, default='', null=True, verbose_name='Page Title')),
                ('secondary_paragraph', models.TextField(blank=True, default='', null=True, verbose_name='Second Paragraph')),
                ('about_description', models.TextField(blank=True, default='', null=True, verbose_name='About')),
                ('background_image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/societies & ag/background image/', verbose_name='Background Image')),
                ('mission_description', models.TextField(blank=True, default='', null=True, verbose_name='Mission')),
                ('mission_picture', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/societies & ag/mission picture/', verbose_name='Mission Image')),
                ('vision_description', models.TextField(blank=True, default='', null=True, verbose_name='Vission')),
                ('vision_picture', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/societies & ag/vision picture/', verbose_name='Vision Image')),
                ('what_is_this_description', models.TextField(blank=True, default='', null=True, verbose_name='What is it about ?')),
                ('why_join_it', models.TextField(blank=True, default='', null=True, verbose_name='Why join it ?')),
                ('what_activites_it_has', models.TextField(blank=True, default='', null=True, verbose_name='What activities we usually do ?')),
                ('how_to_join', models.TextField(blank=True, default='', null=True, verbose_name='How to join it ?')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('facebook_link', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Chapters-Societies-Affinity Group',
            },
        ),
        migrations.CreateModel(
            name='Teams',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=40)),
                ('team_short_description', ckeditor.fields.RichTextField(blank=True, max_length=500, null=True)),
                ('primary', models.IntegerField(default=0)),
                ('team_picture', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='Teams/team_images/')),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
                ('team_of', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='port.chapters_society_and_affinity_groups')),
            ],
        ),
        migrations.CreateModel(
            name='Roles_and_Position',
            fields=[
                ('id', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('role', models.CharField(max_length=40)),
                ('is_eb_member', models.BooleanField(default=False)),
                ('is_sc_ag_eb_member', models.BooleanField(default=False)),
                ('is_officer', models.BooleanField(default=False)),
                ('is_co_ordinator', models.BooleanField(default=False)),
                ('is_faculty', models.BooleanField(default=False)),
                ('is_mentor', models.BooleanField(default=False)),
                ('is_core_volunteer', models.BooleanField(default=False)),
                ('is_volunteer', models.BooleanField(default=False)),
                ('role_of', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='port.chapters_society_and_affinity_groups')),
            ],
            options={
                'verbose_name': 'Registered positions',
            },
        ),
        migrations.CreateModel(
            name='Panels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=40)),
                ('creation_time', models.DateTimeField(blank=True, null=True)),
                ('current', models.BooleanField(default=False)),
                ('panel_end_time', models.DateTimeField(blank=True, null=True)),
                ('panel_of', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='port.chapters_society_and_affinity_groups')),
            ],
            options={
                'verbose_name': 'IEEE NSU SB Panels',
            },
        ),
    ]
