# Generated by Django 4.2.2 on 2023-12-30 17:38

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('port', '0001_initial'),
        ('chapters_and_affinity_group', '0001_initial'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='adminUsers',
            fields=[
                ('username', models.CharField(default='Undetermined', max_length=30, primary_key=True, serialize=False)),
                ('name', models.CharField(default='Undetermined', max_length=60)),
                ('profile_picture', django_resized.forms.ResizedImageField(crop=None, default='Admin/admin_profile_pictures/default_profile_picture.png', force_format='JPEG', keep_meta=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='Admin/admin_profile_pictures/')),
                ('email', models.EmailField(max_length=50)),
            ],
            options={
                'verbose_name': 'Admin User',
            },
        ),
        migrations.CreateModel(
            name='Developer_criteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('developer_type', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Developer Criteria',
            },
        ),
        migrations.CreateModel(
            name='system',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_under_maintenance', models.BooleanField(default=False)),
                ('main_website_under_maintenance', models.BooleanField(default=False)),
                ('portal_under_maintenance', models.BooleanField(default=False)),
                ('scheduling_under_maintenance', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'System Handling',
            },
        ),
        migrations.CreateModel(
            name='SystemErrors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField()),
                ('error_name', models.CharField(max_length=500)),
                ('error_traceback', ckeditor.fields.RichTextField(max_length=3000)),
                ('error_fix_status', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'System Error',
            },
        ),
        migrations.CreateModel(
            name='WDT_Data_Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manage_team_access', models.BooleanField(default=False, verbose_name='Access')),
                ('ieee_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.members', verbose_name='IEEE ID')),
            ],
            options={
                'verbose_name': 'Manage Team Access - Website Development Team',
            },
        ),
        migrations.CreateModel(
            name='SC_AG_Data_Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_details_access', models.BooleanField(default=False)),
                ('create_event_access', models.BooleanField(default=False)),
                ('event_details_edit_access', models.BooleanField(default=False)),
                ('panel_edit_access', models.BooleanField(default=False)),
                ('membership_renewal_access', models.BooleanField(default=False)),
                ('manage_access', models.BooleanField(default=False)),
                ('data_access_of', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='port.chapters_society_and_affinity_groups')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chapters_and_affinity_group.sc_ag_members')),
            ],
            options={
                'verbose_name': 'Manage Data Access - Chapter, Society, Affinity Group',
            },
        ),
        migrations.CreateModel(
            name='Promotions_Data_Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manage_team_access', models.BooleanField(default=False, verbose_name='Access')),
                ('ieee_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.members', verbose_name='IEEE ID')),
            ],
            options={
                'verbose_name': 'Manage Team Access - Promotions Team',
            },
        ),
        migrations.CreateModel(
            name='Project_leads',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('developer_decription', models.CharField(blank=True, max_length=200, null=True)),
                ('developers_picture', models.ImageField(blank=True, default='user_profile_pictures/default_profile_picture.png', null=True, upload_to='Admin/developers_pictures')),
                ('facebook_url', models.URLField(blank=True, null=True)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('github_url', models.URLField(blank=True, null=True)),
                ('developer_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='system_administration.developer_criteria')),
            ],
            options={
                'verbose_name': 'Project Lead',
            },
        ),
        migrations.CreateModel(
            name='Project_Developers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('developer_decription', models.CharField(blank=True, max_length=200, null=True)),
                ('developers_picture', models.ImageField(blank=True, default='user_profile_pictures/default_profile_picture.png', null=True, upload_to='Admin/developers_pictures')),
                ('facebook_url', models.URLField(blank=True, null=True)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('github_url', models.URLField(blank=True, null=True)),
                ('reputation_point', models.IntegerField(default=0)),
                ('developer_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='system_administration.developer_criteria')),
            ],
            options={
                'verbose_name': 'Project Developers',
            },
        ),
        migrations.CreateModel(
            name='Media_Data_Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manage_team_access', models.BooleanField(default=False, verbose_name='Access')),
                ('event_access', models.BooleanField(default=False, verbose_name='Event Access')),
                ('ieee_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.members', verbose_name='IEEE ID')),
            ],
            options={
                'verbose_name': 'Manage Team Access - Media Team',
            },
        ),
        migrations.CreateModel(
            name='MDT_Data_Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('renewal_data_access', models.BooleanField(default=False, verbose_name='Membership Renewal Data Access Permission')),
                ('insb_member_details', models.BooleanField(default=False, verbose_name='INSB Registered Member Details Permission')),
                ('recruitment_session', models.BooleanField(default=False, verbose_name='Recruitment Data View Permission')),
                ('recruited_member_details', models.BooleanField(default=False, verbose_name='Rectuited Member Details Permission')),
                ('ieee_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.members', verbose_name='IEEE ID')),
            ],
            options={
                'verbose_name': 'Membership Development Team Data Access',
            },
        ),
        migrations.CreateModel(
            name='LAO_Data_Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manage_team_access', models.BooleanField(default=False, verbose_name='Access')),
                ('ieee_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.members', verbose_name='IEEE ID')),
            ],
            options={
                'verbose_name': 'Manage Team Access - Logistics and Operations Team',
            },
        ),
        migrations.CreateModel(
            name='Graphics_Data_Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manage_team_access', models.BooleanField(default=False, verbose_name='Manage Team Access')),
                ('event_access', models.BooleanField(default=False, verbose_name='Event Access')),
                ('ieee_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.members', verbose_name='IEEE ID')),
            ],
            options={
                'verbose_name': 'Manage Team Access - Graphics Team',
            },
        ),
        migrations.CreateModel(
            name='FCT_Data_Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manage_team_access', models.BooleanField(default=False, verbose_name='Access')),
                ('ieee_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.members', verbose_name='IEEE ID')),
            ],
            options={
                'verbose_name': 'Manage Team Access - Finance and Corporate Team',
            },
        ),
        migrations.CreateModel(
            name='EMT_Data_Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assign_task_data_access', models.BooleanField(default=False, verbose_name='Task Assign Data Access Permission')),
                ('manage_team_data_access', models.BooleanField(default=False, verbose_name='Manage Team Permission')),
                ('ieee_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.members', verbose_name='IEEE ID')),
            ],
            options={
                'verbose_name': 'Events and Management Team Data Access',
            },
        ),
        migrations.CreateModel(
            name='CWP_Data_Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manage_team_access', models.BooleanField(default=False, verbose_name='Access')),
                ('event_access', models.BooleanField(default=False, verbose_name='Event Access')),
                ('ieee_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.members', verbose_name='IEEE ID')),
            ],
            options={
                'verbose_name': 'Manage Team Access - Content Writing and Publications Team',
            },
        ),
        migrations.CreateModel(
            name='Branch_Data_Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_event_access', models.BooleanField(default=False)),
                ('event_details_page_access', models.BooleanField(default=False)),
                ('create_panels_access', models.BooleanField(default=False)),
                ('panel_memeber_add_remove_access', models.BooleanField(default=False)),
                ('team_details_page', models.BooleanField(default=False)),
                ('manage_web_access', models.BooleanField(default=False)),
                ('manage_web_home_access', models.BooleanField(default=False)),
                ('ieee_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.members')),
            ],
            options={
                'verbose_name': 'Branch Data Access',
            },
        ),
    ]
