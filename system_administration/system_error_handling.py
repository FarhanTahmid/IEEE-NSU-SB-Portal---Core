from datetime import datetime
from .models import SystemErrors,adminUsers
import logging
from django.core.mail import send_mail
from django.conf import settings
from insb_port.settings import DEBUG

class ErrorHandling:
    
    logger=logging.getLogger(__name__)
    
    def saveSystemErrors(error_name,error_traceback):
        try:
            new_error=SystemErrors.objects.create(
                date_time=datetime.now(),
                error_name=error_name,
                error_traceback=error_traceback
            )
            new_error.save()
            if(DEBUG):
                pass
            else:
                ErrorHandling.email_devs_to_handle_errors(error_name=error_name,error_traceback=error_traceback)
        except:
            ErrorHandling.logger.error("An error occurred at {datetime}".format(datetime=datetime.now()), exc_info=True)
    
    def email_devs_to_handle_errors(error_name,error_traceback):
        
        try:
            subject="A new Bug has been Reported in the system!"
            text_body=f"""Hello Dev,\nLooks like your system has crashed into an error!
            \nError Time: {datetime.now()}\n
            \nError Name: {error_name}\n
            Error Traceback: {error_traceback}\n
            Please solve this bugs ASAP to smoothen the system experiene!\n\n"""
            footer="""This message was auto generated by IEEE NSU SB Portal System."""
            message=text_body+footer
            email_from=settings.EMAIL_HOST_USER
            recipient_list=[]
            # get all dev accounts
            # all_dev_accounts=adminUsers.objects.all()
            # for i in all_dev_accounts:
            #     recipient_list.append(i.email)
            # send_mail(
            #     subject,message,email_from,recipient_list
            # )
            return True
        except:
            return False
            