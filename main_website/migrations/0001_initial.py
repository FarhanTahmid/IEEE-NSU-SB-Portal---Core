# Generated by Django 4.2.2 on 2024-01-14 07:26

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        ('port', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='About_IEEE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_ieee', models.TextField(blank=True, null=True)),
                ('about_image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE/About Image/')),
                ('learn_more_link', models.URLField(blank=True, null=True)),
                ('mission_and_vision_link', models.URLField(blank=True, null=True)),
                ('community_description', models.TextField(blank=True, null=True)),
                ('community_image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE/Community Image/')),
                ('start_with_ieee_description', models.TextField(blank=True, null=True)),
                ('collaboration_description', models.TextField(blank=True, null=True)),
                ('publications_description', models.TextField(blank=True, null=True)),
                ('events_and_conferences_description', models.TextField(blank=True, null=True)),
                ('achievements_description', models.TextField(blank=True, null=True)),
                ('innovations_and_developments_description', models.TextField(blank=True, null=True)),
                ('innovations_and_developments_image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE/Innovation Development Image/')),
                ('students_and_member_activities_description', models.TextField(blank=True, null=True)),
                ('students_and_member_activities_image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE/Student Member Activity Image/')),
                ('quality_description', models.TextField(blank=True, null=True)),
                ('quality_image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE/Quality Image/')),
                ('join_now_link', models.URLField(blank=True, null=True)),
                ('asia_pacific_link', models.URLField(blank=True, null=True)),
                ('ieee_computer_organization_link', models.URLField(blank=True, null=True)),
                ('customer_service_number', models.CharField(blank=True, max_length=100, null=True)),
                ('presidents_names', models.CharField(blank=True, max_length=150, null=True)),
                ('founders_names', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'verbose_name': 'About IEEE',
            },
        ),
        migrations.CreateModel(
            name='BannerPictureWithStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/homepage/ribbon_picture')),
            ],
            options={
                'verbose_name': 'Banner Picture with Statistics in Homepage',
            },
        ),
        migrations.CreateModel(
            name='Blog_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blog_category', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='ExemplaryMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_name', models.CharField(max_length=100)),
                ('member_picture', models.ImageField(blank=True, null=True, upload_to='main_website_files/exemplary_members_picture/')),
                ('former_position', models.CharField(blank=True, max_length=100, null=True)),
                ('activity_year', models.CharField(blank=True, max_length=50, null=True)),
                ('current_activity', models.CharField(blank=True, max_length=200, null=True)),
                ('facebook_account_link', models.URLField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('achievements', ckeditor.fields.RichTextField(blank=True, help_text="Please write within 700 words. If the word limit exceeds, Exemplary Members won't be added!", max_length=1500, null=True)),
                ('rank', models.IntegerField(blank=True, help_text='This is used to sort exemplary members in the main website', null=True)),
            ],
            options={
                'verbose_name': 'Exemplary Members',
            },
        ),
        migrations.CreateModel(
            name='FAQ_Question_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'verbose_name': 'FAQ Category',
            },
        ),
        migrations.CreateModel(
            name='GalleryImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/gallery_pictures/')),
                ('upload_date', models.DateField()),
            ],
            options={
                'verbose_name': 'Gallery Image',
            },
        ),
        migrations.CreateModel(
            name='GalleryVideos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_title', models.CharField(max_length=100)),
                ('video_link', models.URLField(help_text='Please use embed link if you are pasting a link of Youtube video!')),
                ('upload_date', models.DateField()),
            ],
            options={
                'verbose_name': 'Gallery Video',
            },
        ),
        migrations.CreateModel(
            name='HomePage_Thoughts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quote', models.TextField()),
                ('author', models.CharField(help_text='Please write within 120 words!', max_length=500)),
            ],
            options={
                'verbose_name': 'HomePage Thoughts',
            },
        ),
        migrations.CreateModel(
            name='HomePageTopBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner_picture', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/homepage/banner_pictures')),
                ('first_layer_text', models.CharField(default='FOCUSING LIMELIGHT ON', max_length=50)),
                ('first_layer_text_colored', models.CharField(default='MASTERMINDS', max_length=20)),
                ('third_layer_text', models.TextField(max_length=200)),
                ('button_text', models.CharField(default='About INSB', max_length=50)),
                ('button_url', models.CharField(default='#', max_length=200)),
            ],
            options={
                'verbose_name': 'Homepage Banner Picture With Texts',
            },
        ),
        migrations.CreateModel(
            name='IEEE_Bangladesh_Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_ieee_bangladesh', models.TextField(blank=True, null=True)),
                ('ieee_bangladesh_logo', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE Bangladesh Section/logo/')),
                ('ieee_bd_link', models.URLField(blank=True, null=True)),
                ('member_and_volunteer_description', models.TextField(blank=True, null=True)),
                ('member_and_volunteer_picture', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE Bangladesh Section/member_volunteer_picture/')),
                ('benefits_description', models.TextField(blank=True, null=True)),
                ('student_branches_description', models.TextField(blank=True, null=True)),
                ('affinity_groups_description', models.TextField(blank=True, null=True)),
                ('community_and_society_description', models.TextField(blank=True, null=True)),
                ('achievements_description', models.TextField(blank=True, null=True)),
                ('chair_name', models.CharField(blank=True, max_length=150, null=True)),
                ('chair_email', models.CharField(blank=True, max_length=200, null=True)),
                ('secretary_name', models.CharField(blank=True, max_length=150, null=True)),
                ('secretary_email', models.CharField(blank=True, max_length=200, null=True)),
                ('office_secretary_name', models.CharField(blank=True, max_length=150, null=True)),
                ('office_secretary_number', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'IEEE Bangladesh Section',
            },
        ),
        migrations.CreateModel(
            name='IEEE_Bangladesh_Section_Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE Bangladesh Section/Gallery/')),
            ],
            options={
                'verbose_name': 'IEEE Bangladesh Section Gallery',
            },
        ),
        migrations.CreateModel(
            name='IEEE_NSU_Student_Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_nsu_student_branch', models.TextField(blank=True, null=True)),
                ('about_image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE NSU Student Branch/About Image/')),
                ('chapters_description', models.TextField(blank=True, null=True)),
                ('ras_image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE NSU Student Branch/RAS Image/')),
                ('ras_read_more_link', models.CharField(blank=True, max_length=200, null=True)),
                ('pes_image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE NSU Student Branch/PES Image/')),
                ('pes_read_more_link', models.CharField(blank=True, max_length=200, null=True)),
                ('ias_image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE NSU Student Branch/IAS Image/')),
                ('ias_read_more_link', models.CharField(blank=True, max_length=200, null=True)),
                ('wie_image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE NSU Student Branch/WIE Image/')),
                ('wie_read_more_link', models.CharField(blank=True, max_length=200, null=True)),
                ('creative_team_description', models.TextField(blank=True, null=True)),
                ('mission_description', models.TextField(blank=True, null=True)),
                ('mission_image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE NSU Student Branch/Mission Image/')),
                ('vision_description', models.TextField(blank=True, null=True)),
                ('vision_image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE NSU Student Branch/Vision Image/')),
                ('events_description', models.TextField(blank=True, null=True)),
                ('join_now_link', models.CharField(blank=True, max_length=200, null=True)),
                ('achievements_description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'IEEE NSU Student Branch',
            },
        ),
        migrations.CreateModel(
            name='IEEE_Region_10',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ieee_region_10_description', models.TextField(blank=True, null=True)),
                ('ieee_region_10_image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE Region 10/Region 10 Image/')),
                ('ieee_region_10_history_link', models.CharField(blank=True, max_length=200, null=True)),
                ('young_professionals_description', models.TextField(blank=True, null=True)),
                ('young_professionals_image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE Region 10/Young Professionals Image/')),
                ('women_in_engineering_ddescription', models.TextField(blank=True, null=True)),
                ('student_and_member_activities_description', models.TextField(blank=True, null=True)),
                ('educational_activities_and_involvements_description', models.TextField(blank=True, null=True)),
                ('industry_relations_description', models.TextField(blank=True, null=True)),
                ('membership_development_description', models.TextField(blank=True, null=True)),
                ('membership_development_image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE Region 10/Membership Development Image/')),
                ('background_picture_parallax', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE Region 10/Parallax Background Image/')),
                ('events_and_conference_description', models.TextField(blank=True, null=True)),
                ('events_and_conference_image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/About/IEEE Region 10/Events and Conference Image/')),
                ('home_page_link', models.CharField(blank=True, max_length=200, null=True)),
                ('website_link', models.CharField(blank=True, max_length=200, null=True)),
                ('membership_inquiry_link', models.CharField(blank=True, max_length=200, null=True)),
                ('for_volunteers_link', models.CharField(blank=True, max_length=200, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'verbose_name': 'IEEE Region 10',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('news_title', models.CharField(max_length=150)),
                ('news_subtitle', models.CharField(blank=True, help_text='Please write within 150 words.', max_length=500, null=True)),
                ('news_description', ckeditor.fields.RichTextField(help_text="Please write within 600 words. If word limit exceeds, News won't be added.", max_length=2000)),
                ('news_picture', models.ImageField(upload_to='main_website_files/news/')),
                ('news_date', models.DateField(blank=True, help_text='Please use the following format: <em>YYYY-MM-DD</em>.', null=True)),
            ],
            options={
                'verbose_name': 'News',
            },
        ),
        migrations.CreateModel(
            name='Page_Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_title', models.CharField(max_length=120)),
                ('category', models.CharField(max_length=120)),
                ('title', models.CharField(max_length=120)),
                ('link', models.URLField(max_length=250)),
            ],
            options={
                'verbose_name': 'Page Link',
            },
        ),
        migrations.CreateModel(
            name='ResearchCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Research Category',
            },
        ),
        migrations.CreateModel(
            name='Toolkit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('picture', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/toolkit_pictures/')),
                ('color_codes', ckeditor.fields.RichTextField(blank=True, max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'Toolkit',
            },
        ),
        migrations.CreateModel(
            name='VolunteerOfTheMonth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contributions', ckeditor.fields.RichTextField(blank=True, max_length=200, null=True)),
                ('ieee_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.members')),
            ],
            options={
                'verbose_name': 'Volunteer Of the Month',
            },
        ),
        migrations.CreateModel(
            name='Research_Papers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('research_banner_picture', models.ImageField(default='main_website_files/Research_pictures/default_research_banner_picture.png', upload_to='main_website_files/Research_pictures/')),
                ('author_names', ckeditor.fields.RichTextField(max_length=300)),
                ('short_description', ckeditor.fields.RichTextField(help_text="Please write within 1500 words. If this limit exceeds Research paper won't be added!", max_length=4000, verbose_name='Abstract')),
                ('publish_date', models.DateField(help_text='<br>Please use the following format: <em>YYYY-MM-DD</em>.')),
                ('publication_link', models.URLField()),
                ('is_requested', models.BooleanField(default=False)),
                ('publish_research', models.BooleanField(default=False)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_website.researchcategory')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='port.chapters_society_and_affinity_groups')),
            ],
            options={
                'verbose_name': 'Research Paper',
            },
        ),
        migrations.CreateModel(
            name='Magazines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('magazine_title', models.CharField(max_length=100)),
                ('publish_date', models.DateField(help_text='<br>Please use the following format: <em>YYYY-MM-DD</em>.')),
                ('magazine_short_description', ckeditor.fields.RichTextField(help_text="Please write within 400 words. If word limit exceeds, Magazine won't be added!", max_length=1000)),
                ('magazine_picture', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/magazine_pictures/')),
                ('magazine_file', models.FileField(upload_to='main_website_files/Magazine/')),
                ('published_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='port.chapters_society_and_affinity_groups')),
            ],
            options={
                'verbose_name': 'Magazine',
            },
        ),
        migrations.CreateModel(
            name='FAQ_Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(blank=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_website.faq_question_category')),
            ],
            options={
                'verbose_name': 'FAQ Questions',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ieee_id', models.IntegerField(blank=True, null=True)),
                ('writer_name', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=150)),
                ('date', models.DateField(help_text='<br>Please use the following format: <em>YYYY-MM-DD</em>.')),
                ('short_description', ckeditor.fields.RichTextField(help_text='Write within 300 words!', max_length=1000)),
                ('blog_banner_picture', django_resized.forms.ResizedImageField(crop=None, default='main_website_files/Blog_banner_pictures/default_blog_banner_picture.png', force_format=None, keep_meta=True, quality=80, scale=1.0, size=[1920, 1080], upload_to='main_website_files/Blog_pictures/')),
                ('description', ckeditor.fields.RichTextField(help_text="Write within 1500 words! If the limits exceed, the model won't save.", max_length=10000)),
                ('publish_blog', models.BooleanField(default=False)),
                ('is_requested', models.BooleanField(default=False)),
                ('branch_or_society', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='port.chapters_society_and_affinity_groups')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_website.blog_category')),
            ],
            options={
                'verbose_name': 'Blog',
            },
        ),
        migrations.CreateModel(
            name='Achievements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('award_name', models.CharField(max_length=100)),
                ('award_description', ckeditor.fields.RichTextField(blank=True, max_length=1000, null=True)),
                ('award_winning_year', models.IntegerField()),
                ('award_picture', models.ImageField(upload_to='main_website_files/achievements/')),
                ('award_of', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='port.chapters_society_and_affinity_groups')),
            ],
            options={
                'verbose_name': 'Achievements',
            },
        ),
    ]
